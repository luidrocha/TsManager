// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using TsManager.Persistence.Context;

namespace TsManager.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TsManager.Domain.Analista_Equipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipeAtendimentoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("EquipeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EquipeAtendimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AnalistaEquipes");
                });

            modelBuilder.Entity("TsManager.Domain.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("IdRegistro")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("URLAnexo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Anexos");
                });

            modelBuilder.Entity("TsManager.Domain.Chamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Analista_EquipeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("AnexoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("DataEncerramento")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EquipeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Localizacao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SeveridadeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("StatusId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TecnicoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("TipoRegistroId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("Analista_EquipeId");

                    b.HasIndex("AnexoId");

                    b.HasIndex("SeveridadeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipoRegistroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Chamados");
                });

            modelBuilder.Entity("TsManager.Domain.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("TsManager.Domain.EquipeAtendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("EquipesAtendimento");
                });

            modelBuilder.Entity("TsManager.Domain.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChamadoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("DataAcao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("IdRegistro")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("IdTecnico")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("ChamadoId");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("TsManager.Domain.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdUsuario")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Senha")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("TsManager.Domain.Severidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Classificacao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("EnviarEmail")
                        .HasColumnType("NUMBER(1)");

                    b.HasKey("Id");

                    b.ToTable("Severidades");
                });

            modelBuilder.Entity("TsManager.Domain.Sla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Indicador")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Tempo")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("Slas");
                });

            modelBuilder.Entity("TsManager.Domain.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("TsManager.Domain.TipoRegistro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("SlaId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("SlaId");

                    b.ToTable("TipoRegistros");
                });

            modelBuilder.Entity("TsManager.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Email")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("LoginId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nome")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefone")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("LoginId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TsManager.Domain.UsuarioChamado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChamadoID")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioChamados");
                });

            modelBuilder.Entity("TsManager.Domain.Analista_Equipe", b =>
                {
                    b.HasOne("TsManager.Domain.EquipeAtendimento", "EquipeAtendimento")
                        .WithMany()
                        .HasForeignKey("EquipeAtendimentoId");

                    b.HasOne("TsManager.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipeAtendimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TsManager.Domain.Chamado", b =>
                {
                    b.HasOne("TsManager.Domain.Analista_Equipe", "Analista_Equipe")
                        .WithMany()
                        .HasForeignKey("Analista_EquipeId");

                    b.HasOne("TsManager.Domain.Anexo", "Anexo")
                        .WithMany()
                        .HasForeignKey("AnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsManager.Domain.Severidade", "Severidade")
                        .WithMany()
                        .HasForeignKey("SeveridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsManager.Domain.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsManager.Domain.TipoRegistro", "TipoRegistro")
                        .WithMany()
                        .HasForeignKey("TipoRegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsManager.Domain.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Analista_Equipe");

                    b.Navigation("Anexo");

                    b.Navigation("Severidade");

                    b.Navigation("Status");

                    b.Navigation("TipoRegistro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TsManager.Domain.Historico", b =>
                {
                    b.HasOne("TsManager.Domain.Chamado", null)
                        .WithMany("historicos")
                        .HasForeignKey("ChamadoId");
                });

            modelBuilder.Entity("TsManager.Domain.TipoRegistro", b =>
                {
                    b.HasOne("TsManager.Domain.Sla", "Sla")
                        .WithMany()
                        .HasForeignKey("SlaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sla");
                });

            modelBuilder.Entity("TsManager.Domain.Usuario", b =>
                {
                    b.HasOne("TsManager.Domain.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TsManager.Domain.Login", "Login")
                        .WithMany()
                        .HasForeignKey("LoginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Login");
                });

            modelBuilder.Entity("TsManager.Domain.UsuarioChamado", b =>
                {
                    b.HasOne("TsManager.Domain.Usuario", null)
                        .WithMany("Chamados")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TsManager.Domain.Chamado", b =>
                {
                    b.Navigation("historicos");
                });

            modelBuilder.Entity("TsManager.Domain.Usuario", b =>
                {
                    b.Navigation("Chamados");
                });
#pragma warning restore 612, 618
        }
    }
}
